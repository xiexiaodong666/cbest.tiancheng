<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.welfare.persist.mapper.AccountConsumeSceneCustomizeMapper">


  <sql id="tableName">
        account_consume_scene
    </sql>

  <sql id="baseColumn">
        id,mer_code,account_type_code,remark,create_user,create_time,update_user,update_time,flag,version
    </sql>
  <sql id="pageAndExport">
     SELECT
    GROUP_CONCAT( CONCAT( ss.store_name, "-", ss.store_code ) ) AS storeInfo,
    act.type_name AS accountTypeName,
    acs.id,
    acs.STATUS,
    acs.create_time AS createTime,
    acs.remark,
    acs.mer_code as merCode
    FROM
    account_consume_scene acs
    inner join account_consume_scene_store_relation acstr on acs.id = acstr.account_consume_scene_id
    inner JOIN supplier_store ss ON acstr.store_code = ss.store_code
    AND acs.mer_code = ss.mer_code
    inner JOIN account_type act ON act.type_code = acs.account_type_code
    where acs.deleted =0 and acstr.deleted= 0 and ss.deleted = 0
  </sql>


  <select id="getPageDTO" resultType="com.welfare.persist.dto.AccountConsumeScenePageDTO">
    SELECT
    GROUP_CONCAT( CONCAT( ss.store_name, "-", ss.store_code ) ) AS storeInfo,
    act.type_name AS accountTypeName,
    acs.id,
    acs.STATUS,
    acs.create_time AS createTime,
    acs.remark,
    acs.mer_code as merCode
    FROM
    account_consume_scene acs
    inner join account_consume_scene_store_relation acstr on acs.id = acstr.account_consume_scene_id
    inner JOIN supplier_store ss ON acstr.store_code = ss.store_code
    AND acs.mer_code = ss.mer_code
    inner JOIN account_type act ON act.type_code = acs.account_type_code
    where acs.deleted =0 and acstr.deleted= 0 and ss.deleted = 0
    <if test=" merCode !='' and merCode != null ">
      and acs.mer_code = #{merCode}
    </if>
    <if test="accountTypeName != ''  and accountTypeName != null ">
      and act.type_name like '${accountTypeName}%'
    </if>
    <if test="status != null ">
      and acs.status = #{status}
    </if>
    <if test="createTimeStart != null ">
      and acs.create_time <![CDATA[>=]]> #{createTimeStart}
    </if>
    <if test="createTimeEnd != null ">
      and acs.create_time <![CDATA[<=]]> #{createTimeEnd}
    </if>
    GROUP BY acs.account_type_code,acs.mer_code
  </select>


  <resultMap type="com.welfare.persist.dto.AccountConsumeSceneMapperDTO" id="detailMap">
    <id property="id" column="id"/>
    <result property="merCode" column="merCode"/>
    <result property="accountTypeCode" column="accountTypeCode"/>
    <result property="accountTypeName" column="accountTypeName"/>
    <result property="remark" column="remark"/>
    <result property="status" column="STATUS"/>
    <result property="createTime" column="createTime"/>
    <result property="deleted" column="deleted"/>
    <collection property="accountConsumeStoreRelationDTOListDTOList" ofType="com.welfare.persist.dto.AccountConsumeStoreRelationDTO">
      <id property="id" column="acstrId"/>
      <result property="storeCode" column="storeCode"/>
      <result property="storeName" column="storeName"/>
      <result property="consumType" column="consumType"/>
      <result property="sceneConsumType" column="sceneConsumType"/>
    </collection>
  </resultMap>

  <select id="queryAccountConsumerScene4Detail"
    resultMap="detailMap">
		SELECT
	acs.id,
	acs.mer_code AS merCode,
	acs.account_type_code AS accountTypeCode,
	act.type_name AS accountTypeName,
	acs.remark,
	acs.STATUS as status,
	acs.create_time AS createTime,
	acs.deleted,
	acstr.id as acstrId,
	acstr.store_code AS storeCode,
	ss.store_name AS storeName,
	ss.consum_type AS consumType,
	acstr.scene_consum_type AS sceneConsumType,
	acs.create_time as createTime
FROM
	account_consume_scene acs
	inner JOIN account_consume_scene_store_relation acstr ON acs.id = acstr.account_consume_scene_id
	inner JOIN supplier_store ss ON acstr.store_code = ss.store_code
	inner JOIN account_type act ON act.type_code = acs.account_type_code
WHERE
	acs.id = #{id} and acstr.deleted = 0
	</select>

  <select id = "getCountByMerCodeAndAccountTypeAndStoreCode" resultType="Integer">
    SELECT
	count( 1 )
FROM
	account_consume_scene acs
	LEFT JOIN account_consume_scene_store_relation acssr ON acs.id = acssr.account_consume_scene_id
WHERE
	acs.mer_code = #{merCode}
	AND acssr.store_code = #{typeCode}
	AND acs.account_type_code = #{storeCode}
  </select>

</mapper>